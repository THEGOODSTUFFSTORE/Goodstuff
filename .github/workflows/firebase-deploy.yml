name: Deploy to Firebase

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch: # Also allow manual runs

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Validate environment variables
      run: |
        echo "Checking required environment variables..."
        if [ -z "$NEXT_PUBLIC_FIREBASE_API_KEY" ]; then echo "❌ NEXT_PUBLIC_FIREBASE_API_KEY is missing"; exit 1; fi
        if [ -z "$NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN" ]; then echo "❌ NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN is missing"; exit 1; fi
        if [ -z "$NEXT_PUBLIC_FIREBASE_PROJECT_ID" ]; then echo "❌ NEXT_PUBLIC_FIREBASE_PROJECT_ID is missing"; exit 1; fi
        if [ -z "$FIREBASE_PROJECT_ID" ]; then echo "❌ FIREBASE_PROJECT_ID is missing"; exit 1; fi
        if [ -z "$FIREBASE_PRIVATE_KEY" ]; then echo "❌ FIREBASE_PRIVATE_KEY is missing"; exit 1; fi
        if [ -z "$FIREBASE_CLIENT_EMAIL" ]; then echo "❌ FIREBASE_CLIENT_EMAIL is missing"; exit 1; fi
        echo "✅ Environment variables validated"
      env:
        NEXT_PUBLIC_FIREBASE_API_KEY: ${{ secrets.NEXT_PUBLIC_FIREBASE_API_KEY }}
        NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN: ${{ secrets.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN }}
        NEXT_PUBLIC_FIREBASE_PROJECT_ID: ${{ secrets.NEXT_PUBLIC_FIREBASE_PROJECT_ID }}
        FIREBASE_PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}
        FIREBASE_PRIVATE_KEY: ${{ secrets.FIREBASE_PRIVATE_KEY }}
        FIREBASE_CLIENT_EMAIL: ${{ secrets.FIREBASE_CLIENT_EMAIL }}
      
    - name: Build Next.js app
      run: npm run build
      env:
        NEXT_PUBLIC_FIREBASE_API_KEY: ${{ secrets.NEXT_PUBLIC_FIREBASE_API_KEY }}
        NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN: ${{ secrets.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN }}
        NEXT_PUBLIC_FIREBASE_PROJECT_ID: ${{ secrets.NEXT_PUBLIC_FIREBASE_PROJECT_ID }}
        NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET: ${{ secrets.NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET }}
        NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID }}
        NEXT_PUBLIC_FIREBASE_APP_ID: ${{ secrets.NEXT_PUBLIC_FIREBASE_APP_ID }}
        FIREBASE_PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}
        FIREBASE_PRIVATE_KEY: ${{ secrets.FIREBASE_PRIVATE_KEY }}
        FIREBASE_CLIENT_EMAIL: ${{ secrets.FIREBASE_CLIENT_EMAIL }}
        PESAPAL_CONSUMER_KEY: ${{ secrets.PESAPAL_CONSUMER_KEY }}
        PESAPAL_CONSUMER_SECRET: ${{ secrets.PESAPAL_CONSUMER_SECRET }}
        PESAPAL_IPN_ID: ${{ secrets.PESAPAL_IPN_ID }}
        NEXT_PUBLIC_APP_URL: ${{ secrets.NEXT_PUBLIC_APP_URL }}
        
    - name: Prepare public directory for hosting
      run: |
        mkdir -p public
        echo '<html><body><h1>App deployed to Firebase Functions</h1><p>Visit your app at the function URL</p></body></html>' > public/index.html
        
    - name: Setup Functions
      run: |
        # Copy the built app to functions directory
        cp -r .next functions/
        cp -r public functions/
        cp package.json functions/
        cp package-lock.json functions/
        
        # Install function dependencies
        cd functions
        npm install
        
    - name: Install Firebase CLI
      run: npm install -g firebase-tools
        
    - name: Deploy to Firebase
      run: |
        # Create service account JSON with proper private key formatting
        echo '${{ secrets.FIREBASE_PRIVATE_KEY }}' | sed 's/\\n/\n/g' > private_key.pem
        
        jq -n \
          --arg type "service_account" \
          --arg project_id "${{ secrets.FIREBASE_PROJECT_ID }}" \
          --rawfile private_key private_key.pem \
          --arg client_email "${{ secrets.FIREBASE_CLIENT_EMAIL }}" \
          '{
            type: $type,
            project_id: $project_id,
            private_key_id: "",
            private_key: $private_key,
            client_email: $client_email,
            client_id: "",
            auth_uri: "https://accounts.google.com/o/oauth2/auth",
            token_uri: "https://oauth2.googleapis.com/token",
            auth_provider_x509_cert_url: "https://www.googleapis.com/oauth2/v1/certs",
            client_x509_cert_url: ("https://www.googleapis.com/robot/v1/metadata/x509/" + $client_email)
          }' > firebase-service-account.json
        
        # Clean up temp file
        rm private_key.pem
        
        # Set up authentication
        export GOOGLE_APPLICATION_CREDENTIALS=./firebase-service-account.json
        
        # Deploy
        firebase deploy --project ${{ secrets.FIREBASE_PROJECT_ID }} --only hosting,functions --non-interactive 